#!/usr/bin/env bash
#### spyglass - Picamera2 MJPG Streamer
####
#### https://github.com/roamingthings/spyglass
####
#### This File is distributed under GPLv3
####

# shellcheck enable=require-variable-braces

### Error Handling
set -Eeou pipefail


### Global Variables
PY_BIN="$(command -v python)"
SPYGLASS_CFG="${HOME}/printer_data/config/spyglass.conf"
DEBUG_OUTPUT=0

### Debugging
if [[ "${DEBUG_OUTPUT}" -ne 0 ]]; then
    set -x
fi


### Helper Messages
debug_msg() {
    printf "DEBUG: %s\n" "${1}"
}

### Helper Funcs
check_py_version() {
    local version
    if [[ -n "${PY_BIN}" ]]; then
        version=$("${PY_BIN}" -V | cut -d" " -f2 | cut -d"." -f1)
    else
        printf "ERROR: Python interpreter is not installed! [EXITING]\n"
        exit 1
    fi
    if [[ -n "${version}" ]] && [[ "${version}" = "3" ]]; then
        printf "INFO: Python interpreter Version %s found ... [OK]\n" "$("${PY_BIN}" -V)"
    elif [[ -n "${version}" ]] && [[ "${version}" = "2" ]]; then
        printf "ERROR: Python interpreter minimum Version 3 is required! [EXITING]\n"
        exit 1
    fi
}

get_config() {
    if [[ -n "${SPYGLASS_CFG}" ]] && [[ -f "${SPYGLASS_CFG}" ]]; then
        printf "INFO: Configuration file found in %s\n" "${SPYGLASS_CFG}"
        print_config
        # shellcheck disable=SC1090
        . "${SPYGLASS_CFG}"
    else
        printf "ERROR: No configuration file found in %s! [EXITING]\n" "${SPYGLASS_CFG}"
        exit 1
    fi
}

print_cfg() {
    local prefix
    prefix="\t\t"
    log_msg "INFO: Print Configfile: '${SPYGLASS_CFG}'"
    (sed '/^#.*/d;/./,$!d' | cut -d'#' -f1) < "${SPYGLASS_CFG}" | \
    while read -r line; do
        printf "%s\n" "${prefix}${line}"
    done
}


#### MAIN
## Parse Args
while getopts ":vhc:d" arg; do
    case "${arg}" in
        v )
            echo -e "\ncrowsnest Version: $(self_version)\n"
            exit 0
        ;;
        h )
            help_msg
            exit 0
        ;;
        c )
            check_cfg "${OPTARG}"
            SPYGLASS_CFG="${OPTARG}"
        ;;
        d )
            DEBUG_OUTPUT=1
        ;;
        \?)
            wrong_args_msg
            exit 1
        ;;
    esac
done


check_py_version
get_config

### Loop to keep running
while true; do
    sleep 1
done
